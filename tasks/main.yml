---

- name: download prometheus mosquitto exporter binary
  get_url:
    url: "{{ mosquitto_exporter_download_url }}"
    dest: "{{ prometheus_exporters_common_dist_dir }}/{{ prometheus_mosquitto_exporter_release_name }}.tar.gz"

- name: unarchive binary tarball
  unarchive:
    copy: no
    src: "{{ prometheus_exporters_common_dist_dir }}/{{ prometheus_mosquitto_exporter_release_name }}.tar.gz"
    dest: "{{ prometheus_exporters_common_dist_dir }}"
    creates: "{{ prometheus_exporters_common_dist_dir }}/{{ prometheus_mosquitto_exporter_release_name }}/mosquitto_exporter"
  register: prometheus_mosquitto_exporter_updated
  notify:
    - restart mosquitto exporter

- name: update group and owner for files
  file:
    path: "{{ prometheus_mosquitto_exporter_release_name }}"
    state: directory
    recurse: yes
    owner: "{{ prometheus_exporters_common_user}}"
    group: "{{ prometheus_exporters_common_group }}"
  when: prometheus_mosquitto_exporter_updated is changed

- name: create symlink to the current release
  file:
    src: "{{ prometheus_exporters_common_dist_dir }}/{{ prometheus_mosquitto_exporter_release_name }}"
    path: "{{ prometheus_exporters_common_root_dir }}/mosquitto_exporter_current"
    state: link

- name: create systemd service unit
  template:
    src: etc/systemd/system/prometheus-mosquitto-exporter.service.j2
    dest: /etc/systemd/system/prometheus-mosquitto-exporter.service
    owner: root
    group: root
    mode: 0644
  when: service_mgr | default(ansible_service_mgr) == 'systemd'
  notify:
    - reenable mosquitto exporter service
    - restart mosquitto exporter

- meta: flush_handlers

- name: ensure prometheus mosquitto exporter service is enabled and started
  service:
    name: prometheus-mosquitto-exporter
    state: started
    enabled: yes
